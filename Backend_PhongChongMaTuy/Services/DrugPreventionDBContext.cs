// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using BusinessObjects_PhongChongMaTuy.Models;
using Microsoft.EntityFrameworkCore;

namespace Backend_PhongChongMaTuy.Services;

public partial class DrugPreventionDBContext : DbContext
{
    public DrugPreventionDBContext(DbContextOptions<DrugPreventionDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Appointment> Appointments { get; set; }

    public virtual DbSet<Campaign> Campaigns { get; set; }

    public virtual DbSet<CampaignParticipant> CampaignParticipants { get; set; }

    public virtual DbSet<ConsultantInfo> ConsultantInfos { get; set; }

    public virtual DbSet<ConsultantSlot> ConsultantSlots { get; set; }

    public virtual DbSet<Course> Courses { get; set; }

    public virtual DbSet<CourseEnrollment> CourseEnrollments { get; set; }

    public virtual DbSet<Lesson> Lessons { get; set; }

    public virtual DbSet<Slot> Slots { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Appointment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Appointm__3214EC07E1A16BD0");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status).HasMaxLength(20);

            entity.HasOne(d => d.Consultant).WithMany(p => p.AppointmentConsultants)
                .HasForeignKey(d => d.ConsultantId)
                .HasConstraintName("FK__Appointme__Consu__3C69FB99");

            entity.HasOne(d => d.Slot).WithMany(p => p.Appointments)
                .HasForeignKey(d => d.SlotId)
                .HasConstraintName("FK__Appointme__SlotI__3D5E1FD2");

            entity.HasOne(d => d.User).WithMany(p => p.AppointmentUsers)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Appointme__UserI__3B75D760");
        });

        modelBuilder.Entity<Campaign>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Campaign__3214EC0763E93A49");

            entity.Property(e => e.Organizer).HasMaxLength(100);
            entity.Property(e => e.Title).HasMaxLength(200);
        });

        modelBuilder.Entity<CampaignParticipant>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Campaign__3214EC07B57D2CA1");

            entity.Property(e => e.JoinedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Campaign).WithMany(p => p.CampaignParticipants)
                .HasForeignKey(d => d.CampaignId)
                .HasConstraintName("FK__CampaignP__Campa__45F365D3");

            entity.HasOne(d => d.User).WithMany(p => p.CampaignParticipants)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__CampaignP__UserI__46E78A0C");
        });

        modelBuilder.Entity<ConsultantInfo>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Consulta__1788CC4CB2D1D622");

            entity.ToTable("ConsultantInfo");

            entity.Property(e => e.UserId).ValueGeneratedNever();
            entity.Property(e => e.AvatarUrl).HasMaxLength(255);
            entity.Property(e => e.Certificate).HasMaxLength(200);
            entity.Property(e => e.Degree).HasMaxLength(200);
            entity.Property(e => e.Languages).HasMaxLength(200);
            entity.Property(e => e.PricePerSession).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Rating).HasColumnType("decimal(3, 2)");
            entity.Property(e => e.WorkingDays).HasMaxLength(50);

            entity.HasOne(d => d.User).WithOne(p => p.ConsultantInfo)
                .HasForeignKey<ConsultantInfo>(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Consultan__UserI__412EB0B6");
        });

        modelBuilder.Entity<ConsultantSlot>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Consulta__3214EC07F1852AB6");

            entity.Property(e => e.IsBooked).HasDefaultValue(false);

            entity.HasOne(d => d.Consultant).WithMany(p => p.ConsultantSlots)
                .HasForeignKey(d => d.ConsultantId)
                .HasConstraintName("FK__Consultan__Consu__36B12243");

            entity.HasOne(d => d.Slot).WithMany(p => p.ConsultantSlots)
                .HasForeignKey(d => d.SlotId)
                .HasConstraintName("FK__Consultan__SlotI__37A5467C");
        });

        modelBuilder.Entity<Course>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Courses__3214EC07B13042E7");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TargetAudience).HasMaxLength(100);
            entity.Property(e => e.Title).HasMaxLength(200);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Courses)
                .HasForeignKey(d => d.CreatedBy)
                .HasConstraintName("FK__Courses__Created__29572725");
        });

        modelBuilder.Entity<CourseEnrollment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CourseEn__3214EC0756DD2BE6");

            entity.Property(e => e.EnrollDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Course).WithMany(p => p.CourseEnrollments)
                .HasForeignKey(d => d.CourseId)
                .HasConstraintName("FK__CourseEnr__Cours__2E1BDC42");

            entity.HasOne(d => d.User).WithMany(p => p.CourseEnrollments)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__CourseEnr__UserI__2D27B809");
        });

        modelBuilder.Entity<Lesson>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Lessons__3214EC071DDAFF2A");

            entity.Property(e => e.Title).HasMaxLength(200);

            entity.HasOne(d => d.Course).WithMany(p => p.Lessons)
                .HasForeignKey(d => d.CourseId)
                .HasConstraintName("FK__Lessons__CourseI__31EC6D26");
        });

        modelBuilder.Entity<Slot>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Slots__3214EC0771E855DA");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Users__3214EC07435F4AD3");

            entity.HasIndex(e => e.Email, "UQ__Users__A9D10534AC638C56").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.PasswordHash).HasMaxLength(255);
            entity.Property(e => e.Phone).HasMaxLength(20);
            entity.Property(e => e.Role).HasMaxLength(20);
            entity.Property(e => e.Status).HasDefaultValue(true);
            entity.Property(e => e.UpdatedAt).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}